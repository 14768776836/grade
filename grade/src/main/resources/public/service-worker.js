"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/css/app.cfd0e71f.css","cfd0e71f4648ab2030d5936c6b535b97"],["/indexH5.html","f20e46d777aa872d8fa8cf3da3e1d3dc"],["/js/antd.030f1441.js","10d8d78cb5a6241e79fb5836791fd42b"],["/js/app.6290aa25.js","e8edf253ddfbdb116ddfea9ed297322e"],["/js/bizcharts.e3d14df4.js","fc8c3cfec696dc65f8b03390d55a7f60"],["/js/dataset.1539d6e5.js","99fff1cc50abc04659335b1d0e07b26b"],["/js/jquery.60922429.js","664ead9129877dbc51b0f9be39460715"],["/js/moment.4fb82077.js","86883c0ced37ff5f630efca46d6e112c"],["/js/react.7b864ed2.js","1eaa32140ae34419995b46b79c42a53a"],["/js/vendor.551ce8e2.js","0233a794e6a74bfb157e7a7b0d9f908a"],["/media/index.00b66c23.less","00b66c23bbb239a6c660ac4561277f18"],["/media/index.0c852203.less","0c85220371c838dec961371d47b4a2af"],["/media/index.19368174.less","19368174fdbd7258b58d2282bc16749b"],["/media/index.22cfa8e2.less","22cfa8e2e13b9c4b48e8b39fcee1cf47"],["/media/index.2998f15e.less","2998f15ea8770703140df2f0a5f130f9"],["/media/index.62567c9e.less","62567c9eedd64668613636d7e2b810aa"],["/media/index.687ed6ab.less","687ed6ab4232a44bc792cd0b840f7418"],["/media/index.85080bfd.less","85080bfdde750fb3208fc916fd8d21a7"],["/media/index.a541ca5b.less","a541ca5be25d575c174e9ffdc69ed9bd"],["/media/index.c9ea049e.less","c9ea049e82be19a0252d655e743c624f"],["/media/index.cdbeefbc.less","cdbeefbc84e4c4a4cad6d75bfbdcd6a2"],["/media/index.cdcf9d91.less","cdcf9d91ad1b654e62697e23fd6082cb"],["/media/index.d4f81e15.less","d4f81e15bd33fa51fb958cdc762ed926"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,n,t,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),r=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var a=new Request(t,{credentials:"same-origin"});return fetch(a).then(function(n){if(!n.ok)throw new Error("Request for "+t+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(t,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!n.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"indexH5.html"),n=urlsToCacheKeys.has(t));!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/indexH5.html",self.location).toString(),n=urlsToCacheKeys.has(t)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});